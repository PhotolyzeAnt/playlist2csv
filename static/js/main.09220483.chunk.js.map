{"version":3,"sources":["spotify.js","App.js","utils.js","index.js"],"names":["scopes","window","location","hash","substring","split","reduce","values","item","parts","s","replace","word","index","toLowerCase","toUpperCase","decodeURIComponent","accessToken","tokenType","expiresIn","history","pushState","document","title","pathname","search","App","useState","playlist","setPlaylist","fetching","setFetching","idInput","setIdInput","e","a","preventDefault","fetch","method","headers","Authorization","then","res","json","fetchedPlaylist","tracks","next","console","log","items","length","useEffect","formattedTracks","filter","track","tracksArray","inputArtists","push","name","artists","map","join","type","onSubmit","handleSubmit","htmlFor","id","value","onChange","target","disabled","href","encodeURIComponent","download","key","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.09220483.chunk.js","sourcesContent":["const authEndpoint = \"https://accounts.spotify.com/authorize\"\nconst clientId = \"f10fc34ec54b46fc92b4086dd5d86fcd\"\nconst redirectUri = \"http://localhost:3000\"\n\nconst scopes = [\"playlist-read-private\"]\n\nexport function getAuthHref() {\n  return `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n    \"%20\"\n  )}&response_type=token`\n}\n\nexport function formatTracks(inputTracks) {\n  const tracks = inputTracks.items\n    .filter(({ track }) => track)\n    .reduce((tracksArray, { track }) => {\n      tracksArray.push({\n        name: track.name,\n        artists: formatArtists(track.artists),\n      })\n      return tracksArray\n    }, [])\n  return tracks\n}\n\nexport function formatArtists(inputArtists) {\n  const artists = inputArtists.map(({ name }) => name).join(\", \")\n  return artists\n}\n","import React, { useEffect, useState } from \"react\"\nimport { getAuthHref, formatTracks } from \"./spotify\"\nimport { camelize, removeHash } from \"./utils\"\n\nconst { accessToken, tokenType, expiresIn } = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce((values, item) => {\n    if (item) {\n      const parts = item.split(\"=\")\n      values[camelize(parts[0])] = decodeURIComponent(parts[1])\n    }\n    return values\n  }, {})\n\nremoveHash()\n\nfunction App() {\n  const [playlist, setPlaylist] = useState(null)\n  const [fetching, setFetching] = useState(false)\n  const [idInput, setIdInput] = useState(\"\")\n\n  useEffect(() => {\n    if (!accessToken) return\n  }, [])\n\n  async function getAllTracks() {\n    const res = await fetch(\n      `https://api.spotify.com/v1/playlists/${idInput}/tracks?`,\n      {\n        method: \"GET\",\n        headers: { Authorization: `${tokenType} ${accessToken}` },\n      }\n    ).then((res) => res.json())\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    setFetching(true)\n    const fetchedPlaylist = await fetch(\n      `https://api.spotify.com/v1/playlists/${idInput}`,\n      {\n        method: \"GET\",\n        headers: { Authorization: `${tokenType} ${accessToken}` },\n      }\n    ).then((res) => res.json())\n\n    let res = fetchedPlaylist.tracks\n\n    while (res.next) {\n      res = await fetch(res.next, {\n        method: \"GET\",\n        headers: { Authorization: `${tokenType} ${accessToken}` },\n      }).then((res) => res.json())\n      console.log(res)\n      fetchedPlaylist.tracks.items = [\n        ...fetchedPlaylist.tracks.items,\n        ...res.items,\n      ]\n    }\n\n    console.log(\n      fetchedPlaylist.tracks.items,\n      fetchedPlaylist.tracks.items.length\n    )\n\n    //console.log(res)\n    setPlaylist(fetchedPlaylist)\n    setIdInput(\"\")\n    setFetching(false)\n  }\n\n  // spotify:playlist:6zWsEoJ3ziANLkqqMIUhEU\n\n  function getCsvHref(tracks) {\n    return (\n      \"data:text/plain;charset=utf-8,\" +\n      encodeURIComponent(\n        \"Title;Artist;Code\\n\" +\n          tracks.map(({ name, artists }) => `${name};${artists};\\n`).join(\"\")\n      )\n    )\n  }\n\n  const formattedTracks = playlist ? formatTracks(playlist.tracks) : null\n\n  return !accessToken ? (\n    <div>\n      <h1>Authorize with spotify</h1>\n      <a href={getAuthHref()}>Click to authorize</a>\n    </div>\n  ) : (\n    <div>\n      <form type=\"submit\" onSubmit={(e) => handleSubmit(e)}>\n        <label htmlFor=\"playlist-input\">\n          Input playlist id:\n          <input\n            id=\"playlist-input\"\n            type=\"text\"\n            value={idInput}\n            onChange={(e) => setIdInput(e.target.value)}\n          ></input>\n        </label>\n        <button disabled={fetching}>Fetch playlist!</button>\n      </form>\n      {playlist ? (\n        <div>\n          <h2>{playlist.name}</h2>\n          <a\n            href={getCsvHref(formattedTracks)}\n            download={`${playlist.name}.csv`}\n          >\n            Download csv\n          </a>\n          <table>\n            <thead>\n              <tr>\n                <th>Song title</th>\n                <th>Artists</th>\n              </tr>\n            </thead>\n            <tbody>\n              {formattedTracks.map((track, index) => (\n                <tr key={index}>\n                  <td>{track.name}</td>\n                  <td>{track.artists}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default App\n","export function camelize(s) {\n  return s\n    .replace(\"_\", \" \")\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (word, index) {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase()\n    })\n    .replace(/\\s+/g, \"\")\n}\n\nexport function removeHash() {\n  window.history.pushState(\n    \"\",\n    document.title,\n    window.location.pathname + window.location.search\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}